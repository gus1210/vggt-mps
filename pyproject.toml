[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vggt-mps"
version = "2.0.0"
description = "VGGT 3D reconstruction optimized for Apple Silicon with sparse attention"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "VGGT MPS Contributors"},
]
maintainers = [
    {name = "VGGT MPS Contributors"},
]
requires-python = ">=3.10"
keywords = [
    "3d-reconstruction",
    "computer-vision",
    "deep-learning",
    "apple-silicon",
    "mps",
    "sparse-attention",
    "vggt",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: MacOS",
    "Environment :: GPU :: Metal",
]
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "numpy>=1.24.0",
    "pillow>=9.5.0",
    "matplotlib>=3.7.0",
    "scipy>=1.10.0",
    "tqdm>=4.65.0",
    "einops>=0.6.1",
    "transformers>=4.30.0",
    "huggingface-hub>=0.16.0",
    "timm>=0.9.0",
    "opencv-python>=4.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
web = [
    "gradio>=3.40.0",
    "plotly>=5.15.0",
    "viser>=0.1.0",
]
mcp = [
    "fastmcp>=0.1.0",
]
all = [
    "vggt-mps[dev,web,mcp]",
]

[project.urls]
Homepage = "https://github.com/jmanhype/vggt-mps"
Documentation = "https://github.com/jmanhype/vggt-mps#readme"
Repository = "https://github.com/jmanhype/vggt-mps.git"
Issues = "https://github.com/jmanhype/vggt-mps/issues"

[project.scripts]
vggt = "main:main"
vggt-mps = "main:main"

[tool.setuptools]
packages = ["src", "tests"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | repo
)/
'''

[tool.flake8]
max-line-length = 100
exclude = [".git", "__pycache__", "build", "dist", "venv", ".venv", "repo"]
ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["repo/", "build/", "dist/"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"